name: Deploy to Azure Container Apps

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment (dev, stage, prod)'
        required: true
        type: choice
        options:
          - dev
          - stage
          - prod
      image_tag:
        description: 'Docker image tag to deploy (e.g. pr-23-abcdef or abcdef)'
        required: true

  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Set the environment for GitHub Environments; enables use of environment secrets/vars
    environment: ${{ github.event_name == 'push' && github.ref_name == 'main' && 'prod' || github.event_name == 'workflow_dispatch' && github.event.inputs.environment || 'dev' }}

    env:
      # IMAGE_NAME is chosen by event/environment: dev repo for dev/stage, prod for prod
      IMAGE_NAME: ${{ (github.event_name == 'push' && github.ref_name == 'main') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod') && 'myapp' || 'myapp-dev' }}
      IMAGE_TAG: ${{ github.event_name == 'push' && github.sha || github.event.inputs.image_tag }}

    steps:
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure Container Registry login
        run: az acr login --name ${{ vars.ACR_NAME }}

      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          resourceGroup: ${{ vars.RESOURCE_GROUP }}
          name: ${{ vars.CONTAINER_APP_NAME }}
          image: ${{ vars.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}