export function getIndexConfig(
  indexName: string,
  openaiEndpoint: string,
  openaiEmbeddingDeployment: string,
) {
  return {
    name: indexName,
    defaultScoringProfile: 'dateScore',
    fields: [
      {
        name: 'chunk_id',
        type: 'Edm.String',
        searchable: true,
        filterable: false,
        retrievable: true,
        stored: true,
        sortable: true,
        facetable: false,
        key: true,
        analyzer: 'keyword',
        synonymMaps: [],
      },
      {
        name: 'parent_id',
        type: 'Edm.String',
        searchable: false,
        filterable: true,
        retrievable: true,
        stored: true,
        sortable: false,
        facetable: false,
        key: false,
        synonymMaps: [],
      },
      {
        name: 'chunk',
        type: 'Edm.String',
        searchable: true,
        filterable: false,
        retrievable: true,
        stored: true,
        sortable: false,
        facetable: false,
        key: false,
        synonymMaps: [],
      },
      {
        name: 'title',
        type: 'Edm.String',
        searchable: true,
        filterable: false,
        retrievable: true,
        stored: true,
        sortable: false,
        facetable: false,
        key: false,
        synonymMaps: [],
      },
      {
        name: 'text_vector',
        type: 'Collection(Edm.Single)',
        searchable: true,
        filterable: false,
        retrievable: true,
        stored: true,
        sortable: false,
        facetable: false,
        key: false,
        dimensions: 1536,
        vectorSearchProfile: `${indexName}-azureOpenAi-text-profile`,
        synonymMaps: [],
      },
      {
        name: 'url',
        type: 'Edm.String',
        searchable: true,
        filterable: false,
        retrievable: true,
        stored: true,
        sortable: false,
        facetable: false,
        key: false,
        synonymMaps: [],
      },
      {
        name: 'date',
        type: 'Edm.DateTimeOffset',
        searchable: false,
        filterable: true,
        retrievable: true,
        stored: true,
        sortable: false,
        facetable: false,
        key: false,
        synonymMaps: [],
      },
      {
        name: 'title_Data_Column',
        type: 'Edm.String',
        searchable: true,
        filterable: false,
        retrievable: true,
        stored: true,
        sortable: false,
        facetable: false,
        key: false,
        synonymMaps: [],
      },
      {
        name: 'metadata_storage_content_type',
        type: 'Edm.String',
        searchable: true,
        filterable: false,
        retrievable: false,
        stored: true,
        sortable: false,
        facetable: false,
        key: false,
        synonymMaps: [],
      },
      {
        name: 'metadata_storage_size',
        type: 'Edm.Int64',
        searchable: false,
        filterable: false,
        retrievable: false,
        stored: true,
        sortable: false,
        facetable: false,
        key: false,
        synonymMaps: [],
      },
      {
        name: 'metadata_storage_last_modified',
        type: 'Edm.DateTimeOffset',
        searchable: false,
        filterable: false,
        retrievable: false,
        stored: true,
        sortable: false,
        facetable: false,
        key: false,
        synonymMaps: [],
      },
      {
        name: 'metadata_storage_content_md5',
        type: 'Edm.String',
        searchable: true,
        filterable: false,
        retrievable: false,
        stored: true,
        sortable: false,
        facetable: false,
        key: false,
        synonymMaps: [],
      },
      {
        name: 'metadata_storage_name',
        type: 'Edm.String',
        searchable: true,
        filterable: false,
        retrievable: false,
        stored: true,
        sortable: false,
        facetable: false,
        key: false,
        synonymMaps: [],
      },
      {
        name: 'metadata_storage_path',
        type: 'Edm.String',
        searchable: true,
        filterable: false,
        retrievable: false,
        stored: true,
        sortable: false,
        facetable: false,
        key: false,
        synonymMaps: [],
      },
      {
        name: 'metadata_storage_file_extension',
        type: 'Edm.String',
        searchable: true,
        filterable: false,
        retrievable: false,
        stored: true,
        sortable: false,
        facetable: false,
        key: false,
        synonymMaps: [],
      },
    ],
    scoringProfiles: [
      {
        name: 'dateScore',
        functionAggregation: 'sum',
        functions: [
          {
            fieldName: 'date',
            interpolation: 'logarithmic',
            type: 'freshness',
            boost: 3,
            freshness: {
              boostingDuration: 'P60D',
            },
          },
        ],
      },
    ],
    suggesters: [],
    similarity: {
      '@odata.type': '#Microsoft.Azure.Search.BM25Similarity',
    },
    semantic: {
      defaultConfiguration: `${indexName}-semantic-configuration`,
      configurations: [
        {
          name: `${indexName}-semantic-configuration`,
          prioritizedFields: {
            titleField: {
              fieldName: 'title',
            },
            prioritizedContentFields: [
              {
                fieldName: 'chunk',
              },
            ],
            prioritizedKeywordsFields: [],
          },
        },
      ],
    },
    vectorSearch: {
      algorithms: [
        {
          name: `${indexName}-algorithm`,
          kind: 'hnsw',
          hnswParameters: {
            metric: 'cosine',
            m: 4,
            efConstruction: 400,
            efSearch: 500,
          },
        },
      ],
      profiles: [
        {
          name: `${indexName}-azureOpenAi-text-profile`,
          algorithm: `${indexName}-algorithm`,
          vectorizer: `${indexName}-azureOpenAi-text-vectorizer`,
        },
      ],
      vectorizers: [
        {
          name: `${indexName}-azureOpenAi-text-vectorizer`,
          kind: 'azureOpenAI',
          azureOpenAIParameters: {
            resourceUri: openaiEndpoint,
            deploymentId: openaiEmbeddingDeployment,
            modelName: 'text-embedding-ada-002',
          },
        },
      ],
      compressions: [],
    },
  };
}
