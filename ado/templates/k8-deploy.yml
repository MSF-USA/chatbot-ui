# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
                latest-produseast2

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build

    jobs:
      - deployment: Deploy
        condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))
        displayName: Deploy
        pool:
          vmImage: $(vmImageName)
        environment: $(env)
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                  displayName: Checkout

                # - task: DownloadSecureFile@1
                #   name: downloadSecrets
                #   inputs:
                #     secureFile: .env.secret.$(env)
                #     retryCount: 3

                - script: |
                    touch $(Build.SourcesDirectory)/k8s/overlays/$(env)/.env.secret.$(env)
                    echo OPENAI_API_HOST=$(OPENAI_API_HOST) > $(Build.SourcesDirectory)/k8s/overlays/$(env)/.env.secret.$(env)
                    echo OPENAI_API_KEY=$(OPENAI_API_KEY) >> $(Build.SourcesDirectory)/k8s/overlays/$(env)/.env.secret.$(env)
                    echo AZURE_AD_CLIENT_SECRET=$(AZURE_AD_CLIENT_SECRET) >> $(Build.SourcesDirectory)/k8s/overlays/$(env)/.env.secret.$(env)
                    echo NEXTAUTH_SECRET=$(NEXTAUTH_SECRET) >> $(Build.SourcesDirectory)/k8s/overlays/$(env)/.env.secret.$(env)

                - script: kustomize build $(Build.SourcesDirectory)/k8s/overlays/$(env) > $(Build.SourcesDirectory)/baked.yml
                  displayName: Bake environment specific manifest

                - task: KubernetesManifest@0
                  displayName: Create imagePullSecret
                  inputs:
                    action: createSecret
                    secretName: $(imagePullSecret)
                    dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
                    kubernetesServiceConnection: $(k8ServiceConnection)

                - task: KubernetesManifest@1
                  displayName: Deploy to Kubernetes cluster
                  inputs:
                    action: deploy
                    namespace: $(namespace)
                    kubernetesServiceConnection: $(k8ServiceConnection)
                    rolloutStatusTimeout: 600
                    manifests: |
                      $(Build.SourcesDirectory)/baked.yml
                    imagePullSecrets: |
                      $(imagePullSecret)
                    containers: |
                      $(containerRegistry)/$(imageRepository):$(tag)
