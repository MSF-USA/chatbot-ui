# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
                latest-$(env)

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build

    jobs:
      - deployment: Deploy
        condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))
        displayName: Deploy
        pool:
          vmImage: $(vmImageName)
        environment: $(env)
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                  displayName: Checkout

                # - task: DownloadSecureFile@1
                #   name: downloadSecrets
                #   inputs:
                #     secureFile: .env.secret.$(env)
                #     retryCount: 3

                - script: |
                    secret_path=$(Build.SourcesDirectory)/k8s/overlays/$(env)/.env.secret.$(env)
                    env_path=$(Build.SourcesDirectory)/k8s/overlays/$(env)/.env.$(env)
                    touch $yaml_path

                    echo OPENAI_API_KEY=$(OPENAI_API_KEY) >> $secret_path
                    echo AZURE_AD_CLIENT_SECRET=$(AZURE_AD_CLIENT_SECRET) >> $secret_path
                    echo NEXTAUTH_SECRET=$(NEXTAUTH_SECRET) >> $secret_path

                    echo OPENAI_API_HOST=$(OPENAI_API_HOST) >> $env_path
                    echo NEXTAUTH_URL=$(NEXTAUTH_URL) >> $env_path
                    echo OPENAI_API_VERSION=$(OPENAI_API_VERSION) >> $env_path
                    echo OPENAI_API_TYPE=$(OPENAI_API_TYPE) >> $env_path
                    echo DEFAULT_MODEL=$(DEFAULT_MODEL) >> $env_path
                    echo AZURE_AD_CLIENT_ID=$(AZURE_AD_CLIENT_ID) >> $env_path
                    echo AZURE_AD_TENANT_ID=$(AZURE_AD_TENANT_ID) >> $env_path
                    echo API_HOST_PREFIX=$(API_HOST_PREFIX) >> $env_path
                    echo API_HOST_DEV_PREFIX=$(API_HOST_DEV_PREFIX) >> $env_path

                - script: kustomize build $(Build.SourcesDirectory)/k8s/overlays/$(env) > $(Build.SourcesDirectory)/baked.yml
                  displayName: Bake environment specific manifest

                - task: KubernetesManifest@0
                  displayName: Create imagePullSecret
                  inputs:
                    action: createSecret
                    secretName: $(imagePullSecret)
                    dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
                    kubernetesServiceConnection: $(k8ServiceConnection)

                - task: KubernetesManifest@1
                  displayName: Deploy to Kubernetes cluster
                  inputs:
                    action: deploy
                    namespace: $(namespace)
                    kubernetesServiceConnection: $(k8ServiceConnection)
                    rolloutStatusTimeout: 600
                    manifests: |
                      $(Build.SourcesDirectory)/baked.yml
                    imagePullSecrets: |
                      $(imagePullSecret)
                    containers: |
                      $(containerRegistry)/$(imageRepository):$(tag)
